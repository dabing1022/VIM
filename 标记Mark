
#vim技巧: vim标记(Mark)

在编辑的时候，你忽然想起来需要修改同一个文档的另一个地方，但又想记住当前的位置，以便稍后再回来编辑。应该怎么做呢？vim中我们可以对文本进行标记，这个概念类似于visual studio中的书签，目的是方便vim编辑器在文档的不同位置间跳转。

正常情况下，这意味着要移动到那个位置，编辑，然后再移回来。这样很费事，也容易忘记刚才所在的位置。

Vim有更聪明的办法。移动光标到下述文本的第5行（John Lennon的名言）。用ma创建一个名为‘a’的标记。移动光标到任一地方，比如，4j。

按下'a（即，单引号加上标记的名字），瞧，Vim跳到了刚才做标记的那一行的行首。如果要跳到做标记的位置，按下`a(即`,上排数字键1左边那个键）。

可以使用任一字母（a-zA-Z）去命名一个标记，意味着一个文件里最多可以有52个命名标记。

 

##添加标记

将光标移到某一行，使用ma命令添加标记。其中，m是标记命令，a是所做标记的名称。

可以使用小写字母a-z或大写字母A-Z中的任意一个做为标记名称。小写字母的标记，仅用于当前缓冲区；而大写字母的标记，则可以跨越不同的缓冲区。例如，你正在编辑File1，但仍然可以使用'A命令，移动到File2中创建的标记A。

跳转标记

创建标记后，可以使用'a命令，跳转到指定标记行的首个非空字符。这里'是单引号。也可以使用`a命令，移到所做标记时的光标位置。这里`是反引号（也就是数字键1左边的那一个）。

##列出标记

利用:marks命令，可以列出所有标记。这其中也包括一些系统内置的特殊标记（Special marks）：



.	最近编辑的位置
0-9	最近使用的文件
∧	最近插入的位置
'	上一次跳转前的位置
"	上一次退出文件时的位置
[	上一次修改的开始处
]	上一次修改的结尾处

##删除标记

如果删除了做过标记的文本行，那么所做的标记也就不存了。我们不仅可以利用标记来快速移动，而且还可以使用标记来删除文本，例如在某一行用ma做了标记，然后就可以使用d'a来删掉这一行。当然，我们也可以使用y'a命令就可以来复制这一行了。

使用:delmarks a b c命令，可以删除某个或多个标记；而:delmarks! 命令，则会删除所有标记。

利用:help mark-motions命令，可以查看关于标记的更多帮助信息。

##命令小结
m	创建标记
'	移动到标记的文本行首
`	移动到标记的光标位置
:marks	列示所有标记
:delmarks	删除指定标记
:delmarks!	删除所有标记
